@page "/shop-cart"
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inject IShopCartAppService shopCartGuiAppService
@inject ILocalStorageService localstorage
@inject IConfiguration configuration
@inject NavigationManager _navigationManager

<main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="index.html" rel="nofollow"><i class="fi-rs-home mr-5"></i>Home</a>
                    <span></span> Shop
                    <span></span> Cart
                </div>
            </div>
        </div>
        <div class="container mb-80 mt-50">
            <div class="row">
                <div class="col-lg-8 mb-40">
                    <h1 class="heading-2 mb-10">Your Cart</h1>
                    <div class="d-flex justify-content-between">
                        
                            @if(data != null && data.Products != null){
                                <h6 class="text-body">There are <span class="text-brand"> @data.Products.Count()</span> products in your cart</h6>
                            }
                        
                        <h6 class="text-body"><a href="javascript:;" class="text-muted" @onclick="ClearCart"><i class="fi-rs-trash mr-5"></i>Clear Cart</a></h6>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-8">
                    <div class="table-responsive shopping-summery">
                        <table class="table table-wishlist">
                            <thead>
                                <tr class="main-heading">
                                    <th class="custome-checkbox start pl-30">
                                        <input class="form-check-input" type="checkbox" name="checkbox" id="exampleCheckbox11" value="">
                                        <label class="form-check-label" for="exampleCheckbox11"></label>
                                    </th>
                                    <th scope="col" colspan="2">Product</th>
                                    <th scope="col">Unit Price</th>
                                    <th scope="col">Quantity</th>
                                    <th scope="col">Subtotal</th>
                                    <th scope="col" class="end">Remove</th>
                                </tr>
                            </thead>
                            <tbody>
                            @if(data != null && data.Products != null)
                            {
                                @foreach(var item in data.Products){
                                    <tr class="pt-30" @key=item>
                                    <td class="custome-checkbox pl-30">
                                        <input class="form-check-input" type="checkbox" name="checkbox" id="exampleCheckbox1" value="">
                                        <label class="form-check-label" for="exampleCheckbox1"></label>
                                    </td>
                                    <td class="image product-thumbnail pt-40"><img src="@item.Img" alt="javascript:;"></td>
                                    <td class="product-des product-name">
                                        <h6 class="mb-5"><a class="product-name mb-10 text-heading" href="product-detail/@item.Id">@item.ProductName</a></h6>
                                        <div class="product-rate-cover">
                                            <div class="product-rate d-inline-block">
                                                <div class="product-rating" style="width:90%">
                                                </div>
                                            </div>
                                            <span class="font-small ml-5 text-muted"> (4.0)</span>
                                        </div>
                                    </td>
                                    <td class="price" data-title="Price">
                                        <h4 class="text-body">$@item.Price </h4>
                                    </td>
                                    <td class="text-center detail-info" data-title="Stock">
                                        <div class="detail-extralink mr-15">
                                            <div class="detail-qty border radius">
                                                <a href="javascript:;" class="qty-down" @onclick="()=>DownQty(item)"><i class="fi-rs-angle-small-down"></i></a>
                                                <input type="text" @bind="item.Quantity" class="qty-val">
                                                <a href="javascript:;" class="qty-up" @onclick="()=>UpQty(item)"><i class="fi-rs-angle-small-up"></i></a>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="price" data-title="Price">
                                        <h4 class="text-brand">$@item.SubTotal </h4>
                                    </td>
                                    <td class="action text-center" data-title="Remove"><a href="javascript:;" class="text-body" @onclick="()=>RemoveItem(item)"><i class="fi-rs-trash"></i></a></td>
                                </tr>
                                }
                            }
                            </tbody>
                        </table>
                    </div>
                    <div class="divider-2 mb-30"></div>
                    <div class="cart-action d-flex justify-content-between">
                        <a class="btn "><i class="fi-rs-arrow-left mr-10" @onclick="RedirectProductPage"></i>Continue Shopping</a>
                        <a class="btn  mr-10 mb-sm-15" @onclick="ReLoadPage"><i class="fi-rs-refresh mr-10"></i>Update Cart</a>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="border p-md-4 cart-totals ml-30">
                        <div class="table-responsive">
                            <table class="table no-border">
                                <tbody>
                                    <tr>
                                        <td class="cart_total_label">
                                            <h6 class="text-muted">Subtotal</h6>
                                        </td>
                                        <td class="cart_total_amount">
                                            <h4 class="text-brand text-end">$@SubTotal</h4>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td scope="col" colspan="2">
                                            <div class="divider-2 mt-10 mb-10"></div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="cart_total_label">
                                            <h6 class="text-muted">Shipping</h6>
                                        </td>
                                        <td class="cart_total_amount">
                                            <h4 class="text-heading text-end">@(ShippingFee==0? "Free":ShippingFee)</h4</td> </tr> <tr>
                                        <td class="cart_total_label">
                                            <h6 class="text-muted">Estimate for</h6>
                                        </td>
                                        <td class="cart_total_amount">
                                            <h4 class="text-heading text-end">Default</h4</td> </tr> <tr>
                                        <td scope="col" colspan="2">
                                            <div class="divider-2 mt-10 mb-10"></div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="cart_total_label">
                                            <h6 class="text-muted">Total</h6>
                                        </td>
                                        <td class="cart_total_amount">
                                            <h4 class="text-brand text-end">$@Total</h4>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <a href="javascript:;" class="btn mb-20 w-100" @onclick="SaveCart">Proceed To CheckOut<i class="fi-rs-sign-out ml-15"></i></a>
                    </div>
                </div>
            </div>
        </div>
    </main>



@code{
    private const string vari = "CartTTT1114";
    private List<LocalStoreItemCart> lsItemsCart = new List<LocalStoreItemCart>();
    private PageShopCartDto data;
    private decimal SubTotal { get; set; } = 0;
    private decimal Total { get; set; } = 0;
    private decimal ShippingFee { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        var content = await localstorage.GetItemAsStringAsync(configuration["LocalStoreName"] ?? vari);
        if (content != null)
        {
            lsItemsCart = ParseLocalStoreValue(content);
        }
        if (lsItemsCart !=null  && lsItemsCart.Count() >0)
        {
            data = await shopCartGuiAppService.GetDatasShopCartPage(new OptionShopCartDto()
                    {
                        localStoreItemCart = lsItemsCart
                    });
        }
        else
        {
            data = new PageShopCartDto(){
                Products = new List<ItemCartDto>()
            }; 
        }
        CalculateSubTotal();
        CalculateTotal();
    }
    private List<LocalStoreItemCart> ParseLocalStoreValue(string content)
    {
        return JsonSerializer.Deserialize<List<LocalStoreItemCart>>(content, new JsonSerializerOptions() { PropertyNameCaseInsensitive = true, Encoder = System.Text.Encodings.Web.JavaScriptEncoder.Create(UnicodeRanges.All) }) ?? new List<LocalStoreItemCart>();
    }
    private async Task UpQty(ItemCartDto item)
    {
        if (item.Quantity == 99) return;
        item.Quantity++;
        lsItemsCart.SingleOrDefault(t => t.Id == item.Id)!.Quantity = item.Quantity;
        await UpdateLocalStore();
        CalculateSubTotal();
        CalculateTotal();
    }
    private async Task DownQty(ItemCartDto item)
    {
        if (item.Quantity == 1) return;
        item.Quantity--;
        lsItemsCart.SingleOrDefault(t => t.Id == item.Id)!.Quantity = item.Quantity;
        await UpdateLocalStore();
        CalculateSubTotal();
        CalculateTotal();
    }
    private async Task ClearCart(){
        await localstorage.ClearAsync();
        _navigationManager.NavigateTo("product-list", true);
    }
    private async Task RemoveItem(ItemCartDto item){
        if (data!= null && data.Products != null)
        {
            data.Products.Remove(item);
            lsItemsCart.RemoveAll(t => t.Id == item.Id);
            await UpdateLocalStore();
        }
    }
    private async Task UpdateLocalStore()
    {
        await localstorage.SetItemAsStringAsync(configuration["LocalStoreName"] ?? vari,JsonSerializer.Serialize<List<LocalStoreItemCart>>(lsItemsCart, new JsonSerializerOptions() { PropertyNameCaseInsensitive = true, Encoder = System.Text.Encodings.Web.JavaScriptEncoder.Create(UnicodeRanges.All) }));
    }
    public async Task SaveCart()
    {
        var dto = new SaveCartDto()
            {
                Items = data.Products,
                SubTotal = SubTotal,
                Total = Total,
                Shipping = ShippingFee
            };
        var rs = await shopCartGuiAppService.SaveCart(dto);
    }
    private void ReLoadPage()
    {
        _navigationManager.NavigateTo($"shop-cart",true);
    }
    private void RedirectProductPage(){
        _navigationManager.NavigateTo($"product-list",true);
    }
    private decimal CalculateSubTotal(){
        return SubTotal = data.Products.Select(t => t.Quantity * t.Price).SingleOrDefault();
    }
    private decimal CalculateTotal(){
        return Total = SubTotal + ShippingFee;
    }
}                                           